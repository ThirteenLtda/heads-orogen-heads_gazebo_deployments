name "heads_gazebo_deployments"

using_task_library 'slave_scheduler'
using_task_library 'heads_simulation'
using_task_library 'heads_control'

import_types_from "std"

deployment 'heads_ship_simulation' do
    tasks = [
        task('vehicle_ref', 'heads_simulation::VehicleMotionReferenceTask'),
        task('vehicle_rb_to_inertial', 'heads_simulation::RigidBodyToInertialTask'),
        task('vehicle_control', 'heads_simulation::RigidBodyControlTask')
    ]

    scheduler = task('heads_ship_scheduler', "slave_scheduler::OrderedSchedulingTask").
    	periodic(0.001)
    tasks.each { |t| t.slave_of(scheduler) }

    add_default_logger
end

deployment 'heads_control' do
    tasks = [
        task('imu', 'heads_simulation::IMUTask'),
        task('encoder', 'heads_simulation::EncoderTask'),
        task('joint_obs', 'heads_control::JointMotionObserverTask'),
        task('camera_body_to_inertial', 'heads_control::BodyToInertialTask'),
        task('base_body_to_inertial', 'heads_control::BodyToInertialTask'),
        task('ne', 'heads_control::NETask'),
        task('traj_plan', 'heads_control::TrajectoryPlannerTask'),
        task('camera_ref', 'heads_control::CameraReferenceTask'),
        task('ctpid', 'heads_control::OperationalSpaceCTPIDTask')
    ]

    scheduler = task('heads_control_scheduler', "slave_scheduler::OrderedSchedulingTask").
    	periodic(0.001)
    tasks.each { |t| t.slave_of(scheduler) }

    add_default_logger
end
